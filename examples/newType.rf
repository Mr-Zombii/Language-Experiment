class Vector7 {

    float x = 0;
    float y = 0;
    float z = 0;
    float w = 0;
    float z = 0;
    float b = 0;
    float c = 0;

    Vector7(float x, float y, float z, float w, float a, float b, float c) {
        this.x = x;
        this.y = y;
        this.z = z;
        this.w = w;
        this.a = a;
        this.b = b;
        this.c = c;
    }

    Vector7(int x, int y, int z, int w, int a, int b, int c) {
        this.x = x.asFloat();
        this.y = y.asFloat();
        this.z = z.asFloat();
        this.w = w.asFloat();
        this.a = a.asFloat();
        this.b = b.asFloat();
        this.c = c.asFloat();
    }

    static Vector7 __add__(Vector7 vec1, float num) {
        return __add__(vec1, new Vector7(num, num, num, num, num, num, num));
    }

    static Vector7 __add__(Vector7 vec1, int num) {
        return __add__(vec1, new Vector7(num, num, num, num, num, num, num));
    }

    static Vector7 __add__(Vector7 vec1, Vector7 vec2) {
        float x = vec1.x + vec2.x;
        float y = vec1.y + vec2.y;
        float z = vec1.z + vec2.z;
        float w = vec1.w + vec2.w;
        float a = vec1.a + vec2.a;
        float b = vec1.b + vec2.b;
        float c = vec1.c + vec2.c;

        return new Vector7(x, y, z, w, a, b, c);
    }

    static Vector7 __sub__(Vector7 vec1, float num) {
        return __sub__(vec1, new Vector7(num, num, num, num, num, num, num));
    }

    static Vector7 __sub__(Vector7 vec1, int num) {
        return __sub__(vec1, new Vector7(num, num, num, num, num, num, num));
    }

    static Vector7 __sub__(Vector7 vec1, Vector7 vec2) {
        float x = vec1.x - vec2.x;
        float y = vec1.y - vec2.y;
        float z = vec1.z - vec2.z;
        float w = vec1.w - vec2.w;
        float a = vec1.a - vec2.a;
        float b = vec1.b - vec2.b;
        float c = vec1.c - vec2.c;

        return new Vector7(x, y, z, w, a, b, c);
    }

    static Vector7 __mul__(Vector7 vec1, float num) {
        return __mul__(vec1, new Vector7(num, num, num, num, num, num, num));
    }

    static Vector7 __mul__(Vector7 vec1, int num) {
        return __mul__(vec1, new Vector7(num, num, num, num, num, num, num));
    }

    static Vector7 __mul__(Vector7 vec1, Vector7 vec2) {
        float x = vec1.x * vec2.x;
        float y = vec1.y * vec2.y;
        float z = vec1.z * vec2.z;
        float w = vec1.w * vec2.w;
        float a = vec1.a * vec2.a;
        float b = vec1.b * vec2.b;
        float c = vec1.c * vec2.c;

        return new Vector7(x, y, z, w, a, b, c);
    }

    static Vector7 __div__(Vector7 vec1, float num) {
        return __div__(vec1, new Vector7(num, num, num, num, num, num, num));
    }

    static Vector7 __div__(Vector7 vec1, int num) {
        return __div__(vec1, new Vector7(num, num, num, num, num, num, num));
    }

    static Vector7 __div__(Vector7 vec1, Vector7 vec2) {    
        float x = vec1.x / vec2.x;
        float y = vec1.y / vec2.y;
        float z = vec1.z / vec2.z;
        float w = vec1.w / vec2.w;
        float a = vec1.a / vec2.a;
        float b = vec1.b / vec2.b;
        float c = vec1.c / vec2.c;

        return new Vector7(x, y, z, w, a, b, c);
    }

    float getMagnitude() {
        Math.sqrt(x * x, y * y, z * z, w * w, a * a, b * b, z * z);
    }

    float getNormalized() {
        float magnitude = this.getMagnitude();

        float x = this.x / (magnitude);
        float y = this.y / (magnitude);
        float z = this.z / (magnitude);
        float w = this.w / (magnitude);
        float a = this.a / (magnitude);
        float b = this.b / (magnitude);
        float c = this.c / (magnitude);

        return new Vector7(x, y, z, w, a, b, c);
    }

}